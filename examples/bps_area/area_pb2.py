# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bps_area/grpc/protos/area.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bps_area/grpc/protos/area.proto',
  package='bps_area.grpc.interfaces',
  syntax='proto3',
  serialized_pb=_b('\n\x1f\x62ps_area/grpc/protos/area.proto\x12\x18\x62ps_area.grpc.interfaces\x1a\x1bgoogle/protobuf/empty.proto\"B\n\x08Province\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0e\n\x06lastId\x18\x04 \x01(\t\"w\n\x07Regency\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x34\n\x08province\x18\x04 \x01(\x0b\x32\".bps_area.grpc.interfaces.Province\x12\x0e\n\x06lastId\x18\x05 \x01(\t\"v\n\x08\x44istrict\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x32\n\x07regency\x18\x04 \x01(\x0b\x32!.bps_area.grpc.interfaces.Regency\x12\x0e\n\x06lastId\x18\x05 \x01(\t\"w\n\x07Village\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x34\n\x08\x64istrict\x18\x04 \x01(\x0b\x32\".bps_area.grpc.interfaces.District\x12\x0e\n\x06lastId\x18\x05 \x01(\t\"y\n\x0b\x43\x65nsusBlock\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x32\n\x07village\x18\x04 \x01(\x0b\x32!.bps_area.grpc.interfaces.Village\x12\x0e\n\x06lastId\x18\x05 \x01(\t\"\x14\n\x06\x41reaID\x12\n\n\x02id\x18\x01 \x01(\t\"\x1c\n\x0bSearchQuery\x12\r\n\x05query\x18\x01 \x01(\t\":\n\x08Response\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\t2\xa3\x05\n\x0fProvinceService\x12\x46\n\x04list\x12\x16.google.protobuf.Empty\x1a\".bps_area.grpc.interfaces.Province\"\x00\x30\x01\x12M\n\x03get\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Province\"\x00\x12O\n\x03\x61\x64\x64\x12\".bps_area.grpc.interfaces.Province\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12R\n\x06\x61\x64\x64Get\x12\".bps_area.grpc.interfaces.Province\x1a\".bps_area.grpc.interfaces.Province\"\x00\x12R\n\x06update\x12\".bps_area.grpc.interfaces.Province\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12U\n\tupdateGet\x12\".bps_area.grpc.interfaces.Province\x1a\".bps_area.grpc.interfaces.Province\"\x00\x12P\n\x06\x64\x65lete\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12W\n\x06search\x12%.bps_area.grpc.interfaces.SearchQuery\x1a\".bps_area.grpc.interfaces.Province\"\x00\x30\x01\x32\xee\x05\n\x0eRegencyService\x12\x45\n\x04list\x12\x16.google.protobuf.Empty\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x30\x01\x12S\n\x06listBy\x12\".bps_area.grpc.interfaces.Province\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x30\x01\x12L\n\x03get\x12 .bps_area.grpc.interfaces.AreaID\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x12N\n\x03\x61\x64\x64\x12!.bps_area.grpc.interfaces.Regency\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12P\n\x06\x61\x64\x64Get\x12!.bps_area.grpc.interfaces.Regency\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x12Q\n\x06update\x12!.bps_area.grpc.interfaces.Regency\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12S\n\tupdateGet\x12!.bps_area.grpc.interfaces.Regency\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x12P\n\x06\x64\x65lete\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12V\n\x06search\x12%.bps_area.grpc.interfaces.SearchQuery\x1a!.bps_area.grpc.interfaces.Regency\"\x00\x30\x01\x32\xf8\x05\n\x0f\x44istrictService\x12\x46\n\x04list\x12\x16.google.protobuf.Empty\x1a\".bps_area.grpc.interfaces.District\"\x00\x30\x01\x12S\n\x06listBy\x12!.bps_area.grpc.interfaces.Regency\x1a\".bps_area.grpc.interfaces.District\"\x00\x30\x01\x12M\n\x03get\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.District\"\x00\x12O\n\x03\x61\x64\x64\x12\".bps_area.grpc.interfaces.District\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12R\n\x06\x61\x64\x64Get\x12\".bps_area.grpc.interfaces.District\x1a\".bps_area.grpc.interfaces.District\"\x00\x12R\n\x06update\x12\".bps_area.grpc.interfaces.District\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12U\n\tupdateGet\x12\".bps_area.grpc.interfaces.District\x1a\".bps_area.grpc.interfaces.District\"\x00\x12P\n\x06\x64\x65lete\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12W\n\x06search\x12%.bps_area.grpc.interfaces.SearchQuery\x1a\".bps_area.grpc.interfaces.District\"\x00\x30\x01\x32\xee\x05\n\x0eVillageService\x12\x45\n\x04list\x12\x16.google.protobuf.Empty\x1a!.bps_area.grpc.interfaces.Village\"\x00\x30\x01\x12S\n\x06listBy\x12\".bps_area.grpc.interfaces.District\x1a!.bps_area.grpc.interfaces.Village\"\x00\x30\x01\x12L\n\x03get\x12 .bps_area.grpc.interfaces.AreaID\x1a!.bps_area.grpc.interfaces.Village\"\x00\x12N\n\x03\x61\x64\x64\x12!.bps_area.grpc.interfaces.Village\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12P\n\x06\x61\x64\x64Get\x12!.bps_area.grpc.interfaces.Village\x1a!.bps_area.grpc.interfaces.Village\"\x00\x12Q\n\x06update\x12!.bps_area.grpc.interfaces.Village\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12S\n\tupdateGet\x12!.bps_area.grpc.interfaces.Village\x1a!.bps_area.grpc.interfaces.Village\"\x00\x12P\n\x06\x64\x65lete\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12V\n\x06search\x12%.bps_area.grpc.interfaces.SearchQuery\x1a!.bps_area.grpc.interfaces.Village\"\x00\x30\x01\x32\x99\x06\n\x12\x43\x65nsusBlockService\x12I\n\x04list\x12\x16.google.protobuf.Empty\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x30\x01\x12V\n\x06listBy\x12!.bps_area.grpc.interfaces.Village\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x30\x01\x12P\n\x03get\x12 .bps_area.grpc.interfaces.AreaID\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x12R\n\x03\x61\x64\x64\x12%.bps_area.grpc.interfaces.CensusBlock\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12X\n\x06\x61\x64\x64Get\x12%.bps_area.grpc.interfaces.CensusBlock\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x12U\n\x06update\x12%.bps_area.grpc.interfaces.CensusBlock\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12[\n\tupdateGet\x12%.bps_area.grpc.interfaces.CensusBlock\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x12P\n\x06\x64\x65lete\x12 .bps_area.grpc.interfaces.AreaID\x1a\".bps_area.grpc.interfaces.Response\"\x00\x12Z\n\x06search\x12%.bps_area.grpc.interfaces.SearchQuery\x1a%.bps_area.grpc.interfaces.CensusBlock\"\x00\x30\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PROVINCE = _descriptor.Descriptor(
  name='Province',
  full_name='bps_area.grpc.interfaces.Province',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.Province.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='bps_area.grpc.interfaces.Province.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='bps_area.grpc.interfaces.Province.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastId', full_name='bps_area.grpc.interfaces.Province.lastId', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=156,
)


_REGENCY = _descriptor.Descriptor(
  name='Regency',
  full_name='bps_area.grpc.interfaces.Regency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.Regency.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='bps_area.grpc.interfaces.Regency.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='bps_area.grpc.interfaces.Regency.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='province', full_name='bps_area.grpc.interfaces.Regency.province', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastId', full_name='bps_area.grpc.interfaces.Regency.lastId', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=277,
)


_DISTRICT = _descriptor.Descriptor(
  name='District',
  full_name='bps_area.grpc.interfaces.District',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.District.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='bps_area.grpc.interfaces.District.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='bps_area.grpc.interfaces.District.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='regency', full_name='bps_area.grpc.interfaces.District.regency', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastId', full_name='bps_area.grpc.interfaces.District.lastId', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=279,
  serialized_end=397,
)


_VILLAGE = _descriptor.Descriptor(
  name='Village',
  full_name='bps_area.grpc.interfaces.Village',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.Village.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='bps_area.grpc.interfaces.Village.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='bps_area.grpc.interfaces.Village.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='district', full_name='bps_area.grpc.interfaces.Village.district', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastId', full_name='bps_area.grpc.interfaces.Village.lastId', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=518,
)


_CENSUSBLOCK = _descriptor.Descriptor(
  name='CensusBlock',
  full_name='bps_area.grpc.interfaces.CensusBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.CensusBlock.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='bps_area.grpc.interfaces.CensusBlock.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='bps_area.grpc.interfaces.CensusBlock.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='village', full_name='bps_area.grpc.interfaces.CensusBlock.village', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastId', full_name='bps_area.grpc.interfaces.CensusBlock.lastId', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=520,
  serialized_end=641,
)


_AREAID = _descriptor.Descriptor(
  name='AreaID',
  full_name='bps_area.grpc.interfaces.AreaID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bps_area.grpc.interfaces.AreaID.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=643,
  serialized_end=663,
)


_SEARCHQUERY = _descriptor.Descriptor(
  name='SearchQuery',
  full_name='bps_area.grpc.interfaces.SearchQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='query', full_name='bps_area.grpc.interfaces.SearchQuery.query', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=665,
  serialized_end=693,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bps_area.grpc.interfaces.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='bps_area.grpc.interfaces.Response.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='bps_area.grpc.interfaces.Response.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='bps_area.grpc.interfaces.Response.data', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=695,
  serialized_end=753,
)

_REGENCY.fields_by_name['province'].message_type = _PROVINCE
_DISTRICT.fields_by_name['regency'].message_type = _REGENCY
_VILLAGE.fields_by_name['district'].message_type = _DISTRICT
_CENSUSBLOCK.fields_by_name['village'].message_type = _VILLAGE
DESCRIPTOR.message_types_by_name['Province'] = _PROVINCE
DESCRIPTOR.message_types_by_name['Regency'] = _REGENCY
DESCRIPTOR.message_types_by_name['District'] = _DISTRICT
DESCRIPTOR.message_types_by_name['Village'] = _VILLAGE
DESCRIPTOR.message_types_by_name['CensusBlock'] = _CENSUSBLOCK
DESCRIPTOR.message_types_by_name['AreaID'] = _AREAID
DESCRIPTOR.message_types_by_name['SearchQuery'] = _SEARCHQUERY
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE

Province = _reflection.GeneratedProtocolMessageType('Province', (_message.Message,), dict(
  DESCRIPTOR = _PROVINCE,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.Province)
  ))
_sym_db.RegisterMessage(Province)

Regency = _reflection.GeneratedProtocolMessageType('Regency', (_message.Message,), dict(
  DESCRIPTOR = _REGENCY,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.Regency)
  ))
_sym_db.RegisterMessage(Regency)

District = _reflection.GeneratedProtocolMessageType('District', (_message.Message,), dict(
  DESCRIPTOR = _DISTRICT,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.District)
  ))
_sym_db.RegisterMessage(District)

Village = _reflection.GeneratedProtocolMessageType('Village', (_message.Message,), dict(
  DESCRIPTOR = _VILLAGE,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.Village)
  ))
_sym_db.RegisterMessage(Village)

CensusBlock = _reflection.GeneratedProtocolMessageType('CensusBlock', (_message.Message,), dict(
  DESCRIPTOR = _CENSUSBLOCK,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.CensusBlock)
  ))
_sym_db.RegisterMessage(CensusBlock)

AreaID = _reflection.GeneratedProtocolMessageType('AreaID', (_message.Message,), dict(
  DESCRIPTOR = _AREAID,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.AreaID)
  ))
_sym_db.RegisterMessage(AreaID)

SearchQuery = _reflection.GeneratedProtocolMessageType('SearchQuery', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHQUERY,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.SearchQuery)
  ))
_sym_db.RegisterMessage(SearchQuery)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'bps_area.grpc.protos.area_pb2'
  # @@protoc_insertion_point(class_scope:bps_area.grpc.interfaces.Response)
  ))
_sym_db.RegisterMessage(Response)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ProvinceServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.list = channel.unary_stream(
          '/bps_area.grpc.interfaces.ProvinceService/list',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=Province.FromString,
          )
      self.get = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/get',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Province.FromString,
          )
      self.add = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/add',
          request_serializer=Province.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.addGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/addGet',
          request_serializer=Province.SerializeToString,
          response_deserializer=Province.FromString,
          )
      self.update = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/update',
          request_serializer=Province.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.updateGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/updateGet',
          request_serializer=Province.SerializeToString,
          response_deserializer=Province.FromString,
          )
      self.delete = channel.unary_unary(
          '/bps_area.grpc.interfaces.ProvinceService/delete',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_stream(
          '/bps_area.grpc.interfaces.ProvinceService/search',
          request_serializer=SearchQuery.SerializeToString,
          response_deserializer=Province.FromString,
          )


  class ProvinceServiceServicer(object):

    def list(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def addGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def updateGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ProvinceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=Province.SerializeToString,
        ),
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=AreaID.FromString,
            response_serializer=Province.SerializeToString,
        ),
        'add': grpc.unary_unary_rpc_method_handler(
            servicer.add,
            request_deserializer=Province.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'addGet': grpc.unary_unary_rpc_method_handler(
            servicer.addGet,
            request_deserializer=Province.FromString,
            response_serializer=Province.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=Province.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'updateGet': grpc.unary_unary_rpc_method_handler(
            servicer.updateGet,
            request_deserializer=Province.FromString,
            response_serializer=Province.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=AreaID.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_stream_rpc_method_handler(
            servicer.search,
            request_deserializer=SearchQuery.FromString,
            response_serializer=Province.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bps_area.grpc.interfaces.ProvinceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RegencyServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.list = channel.unary_stream(
          '/bps_area.grpc.interfaces.RegencyService/list',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=Regency.FromString,
          )
      self.listBy = channel.unary_stream(
          '/bps_area.grpc.interfaces.RegencyService/listBy',
          request_serializer=Province.SerializeToString,
          response_deserializer=Regency.FromString,
          )
      self.get = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/get',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Regency.FromString,
          )
      self.add = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/add',
          request_serializer=Regency.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.addGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/addGet',
          request_serializer=Regency.SerializeToString,
          response_deserializer=Regency.FromString,
          )
      self.update = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/update',
          request_serializer=Regency.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.updateGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/updateGet',
          request_serializer=Regency.SerializeToString,
          response_deserializer=Regency.FromString,
          )
      self.delete = channel.unary_unary(
          '/bps_area.grpc.interfaces.RegencyService/delete',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_stream(
          '/bps_area.grpc.interfaces.RegencyService/search',
          request_serializer=SearchQuery.SerializeToString,
          response_deserializer=Regency.FromString,
          )


  class RegencyServiceServicer(object):

    def list(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listBy(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def addGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def updateGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RegencyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=Regency.SerializeToString,
        ),
        'listBy': grpc.unary_stream_rpc_method_handler(
            servicer.listBy,
            request_deserializer=Province.FromString,
            response_serializer=Regency.SerializeToString,
        ),
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=AreaID.FromString,
            response_serializer=Regency.SerializeToString,
        ),
        'add': grpc.unary_unary_rpc_method_handler(
            servicer.add,
            request_deserializer=Regency.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'addGet': grpc.unary_unary_rpc_method_handler(
            servicer.addGet,
            request_deserializer=Regency.FromString,
            response_serializer=Regency.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=Regency.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'updateGet': grpc.unary_unary_rpc_method_handler(
            servicer.updateGet,
            request_deserializer=Regency.FromString,
            response_serializer=Regency.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=AreaID.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_stream_rpc_method_handler(
            servicer.search,
            request_deserializer=SearchQuery.FromString,
            response_serializer=Regency.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bps_area.grpc.interfaces.RegencyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class DistrictServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.list = channel.unary_stream(
          '/bps_area.grpc.interfaces.DistrictService/list',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=District.FromString,
          )
      self.listBy = channel.unary_stream(
          '/bps_area.grpc.interfaces.DistrictService/listBy',
          request_serializer=Regency.SerializeToString,
          response_deserializer=District.FromString,
          )
      self.get = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/get',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=District.FromString,
          )
      self.add = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/add',
          request_serializer=District.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.addGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/addGet',
          request_serializer=District.SerializeToString,
          response_deserializer=District.FromString,
          )
      self.update = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/update',
          request_serializer=District.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.updateGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/updateGet',
          request_serializer=District.SerializeToString,
          response_deserializer=District.FromString,
          )
      self.delete = channel.unary_unary(
          '/bps_area.grpc.interfaces.DistrictService/delete',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_stream(
          '/bps_area.grpc.interfaces.DistrictService/search',
          request_serializer=SearchQuery.SerializeToString,
          response_deserializer=District.FromString,
          )


  class DistrictServiceServicer(object):

    def list(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listBy(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def addGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def updateGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_DistrictServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=District.SerializeToString,
        ),
        'listBy': grpc.unary_stream_rpc_method_handler(
            servicer.listBy,
            request_deserializer=Regency.FromString,
            response_serializer=District.SerializeToString,
        ),
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=AreaID.FromString,
            response_serializer=District.SerializeToString,
        ),
        'add': grpc.unary_unary_rpc_method_handler(
            servicer.add,
            request_deserializer=District.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'addGet': grpc.unary_unary_rpc_method_handler(
            servicer.addGet,
            request_deserializer=District.FromString,
            response_serializer=District.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=District.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'updateGet': grpc.unary_unary_rpc_method_handler(
            servicer.updateGet,
            request_deserializer=District.FromString,
            response_serializer=District.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=AreaID.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_stream_rpc_method_handler(
            servicer.search,
            request_deserializer=SearchQuery.FromString,
            response_serializer=District.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bps_area.grpc.interfaces.DistrictService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class VillageServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.list = channel.unary_stream(
          '/bps_area.grpc.interfaces.VillageService/list',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=Village.FromString,
          )
      self.listBy = channel.unary_stream(
          '/bps_area.grpc.interfaces.VillageService/listBy',
          request_serializer=District.SerializeToString,
          response_deserializer=Village.FromString,
          )
      self.get = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/get',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Village.FromString,
          )
      self.add = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/add',
          request_serializer=Village.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.addGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/addGet',
          request_serializer=Village.SerializeToString,
          response_deserializer=Village.FromString,
          )
      self.update = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/update',
          request_serializer=Village.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.updateGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/updateGet',
          request_serializer=Village.SerializeToString,
          response_deserializer=Village.FromString,
          )
      self.delete = channel.unary_unary(
          '/bps_area.grpc.interfaces.VillageService/delete',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_stream(
          '/bps_area.grpc.interfaces.VillageService/search',
          request_serializer=SearchQuery.SerializeToString,
          response_deserializer=Village.FromString,
          )


  class VillageServiceServicer(object):

    def list(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listBy(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def addGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def updateGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_VillageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=Village.SerializeToString,
        ),
        'listBy': grpc.unary_stream_rpc_method_handler(
            servicer.listBy,
            request_deserializer=District.FromString,
            response_serializer=Village.SerializeToString,
        ),
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=AreaID.FromString,
            response_serializer=Village.SerializeToString,
        ),
        'add': grpc.unary_unary_rpc_method_handler(
            servicer.add,
            request_deserializer=Village.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'addGet': grpc.unary_unary_rpc_method_handler(
            servicer.addGet,
            request_deserializer=Village.FromString,
            response_serializer=Village.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=Village.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'updateGet': grpc.unary_unary_rpc_method_handler(
            servicer.updateGet,
            request_deserializer=Village.FromString,
            response_serializer=Village.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=AreaID.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_stream_rpc_method_handler(
            servicer.search,
            request_deserializer=SearchQuery.FromString,
            response_serializer=Village.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bps_area.grpc.interfaces.VillageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CensusBlockServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.list = channel.unary_stream(
          '/bps_area.grpc.interfaces.CensusBlockService/list',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )
      self.listBy = channel.unary_stream(
          '/bps_area.grpc.interfaces.CensusBlockService/listBy',
          request_serializer=Village.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )
      self.get = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/get',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )
      self.add = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/add',
          request_serializer=CensusBlock.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.addGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/addGet',
          request_serializer=CensusBlock.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )
      self.update = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/update',
          request_serializer=CensusBlock.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.updateGet = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/updateGet',
          request_serializer=CensusBlock.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )
      self.delete = channel.unary_unary(
          '/bps_area.grpc.interfaces.CensusBlockService/delete',
          request_serializer=AreaID.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.search = channel.unary_stream(
          '/bps_area.grpc.interfaces.CensusBlockService/search',
          request_serializer=SearchQuery.SerializeToString,
          response_deserializer=CensusBlock.FromString,
          )


  class CensusBlockServiceServicer(object):

    def list(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listBy(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def addGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def updateGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CensusBlockServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
        'listBy': grpc.unary_stream_rpc_method_handler(
            servicer.listBy,
            request_deserializer=Village.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=AreaID.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
        'add': grpc.unary_unary_rpc_method_handler(
            servicer.add,
            request_deserializer=CensusBlock.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'addGet': grpc.unary_unary_rpc_method_handler(
            servicer.addGet,
            request_deserializer=CensusBlock.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
        'update': grpc.unary_unary_rpc_method_handler(
            servicer.update,
            request_deserializer=CensusBlock.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'updateGet': grpc.unary_unary_rpc_method_handler(
            servicer.updateGet,
            request_deserializer=CensusBlock.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=AreaID.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'search': grpc.unary_stream_rpc_method_handler(
            servicer.search,
            request_deserializer=SearchQuery.FromString,
            response_serializer=CensusBlock.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bps_area.grpc.interfaces.CensusBlockService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaProvinceServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def addGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def updateGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaProvinceServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    get.future = None
    def add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    add.future = None
    def addGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    addGet.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def updateGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    updateGet.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    delete.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_ProvinceService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bps_area.grpc.interfaces.ProvinceService', 'add'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'addGet'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'delete'): AreaID.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'get'): AreaID.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'search'): SearchQuery.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'update'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'updateGet'): Province.FromString,
    }
    response_serializers = {
      ('bps_area.grpc.interfaces.ProvinceService', 'add'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'addGet'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'delete'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'get'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'list'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'search'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'update'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'updateGet'): Province.SerializeToString,
    }
    method_implementations = {
      ('bps_area.grpc.interfaces.ProvinceService', 'add'): face_utilities.unary_unary_inline(servicer.add),
      ('bps_area.grpc.interfaces.ProvinceService', 'addGet'): face_utilities.unary_unary_inline(servicer.addGet),
      ('bps_area.grpc.interfaces.ProvinceService', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('bps_area.grpc.interfaces.ProvinceService', 'get'): face_utilities.unary_unary_inline(servicer.get),
      ('bps_area.grpc.interfaces.ProvinceService', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('bps_area.grpc.interfaces.ProvinceService', 'search'): face_utilities.unary_stream_inline(servicer.search),
      ('bps_area.grpc.interfaces.ProvinceService', 'update'): face_utilities.unary_unary_inline(servicer.update),
      ('bps_area.grpc.interfaces.ProvinceService', 'updateGet'): face_utilities.unary_unary_inline(servicer.updateGet),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ProvinceService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bps_area.grpc.interfaces.ProvinceService', 'add'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'addGet'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'delete'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'get'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'search'): SearchQuery.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'update'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.ProvinceService', 'updateGet'): Province.SerializeToString,
    }
    response_deserializers = {
      ('bps_area.grpc.interfaces.ProvinceService', 'add'): Response.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'addGet'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'delete'): Response.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'get'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'list'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'search'): Province.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'update'): Response.FromString,
      ('bps_area.grpc.interfaces.ProvinceService', 'updateGet'): Province.FromString,
    }
    cardinalities = {
      'add': cardinality.Cardinality.UNARY_UNARY,
      'addGet': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'get': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'search': cardinality.Cardinality.UNARY_STREAM,
      'update': cardinality.Cardinality.UNARY_UNARY,
      'updateGet': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bps_area.grpc.interfaces.ProvinceService', cardinalities, options=stub_options)


  class BetaRegencyServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listBy(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def addGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def updateGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRegencyServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def listBy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    get.future = None
    def add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    add.future = None
    def addGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    addGet.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def updateGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    updateGet.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    delete.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_RegencyService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bps_area.grpc.interfaces.RegencyService', 'add'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'addGet'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'delete'): AreaID.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'get'): AreaID.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'listBy'): Province.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'search'): SearchQuery.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'update'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'updateGet'): Regency.FromString,
    }
    response_serializers = {
      ('bps_area.grpc.interfaces.RegencyService', 'add'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'addGet'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'delete'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'get'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'list'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'listBy'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'search'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'update'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'updateGet'): Regency.SerializeToString,
    }
    method_implementations = {
      ('bps_area.grpc.interfaces.RegencyService', 'add'): face_utilities.unary_unary_inline(servicer.add),
      ('bps_area.grpc.interfaces.RegencyService', 'addGet'): face_utilities.unary_unary_inline(servicer.addGet),
      ('bps_area.grpc.interfaces.RegencyService', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('bps_area.grpc.interfaces.RegencyService', 'get'): face_utilities.unary_unary_inline(servicer.get),
      ('bps_area.grpc.interfaces.RegencyService', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('bps_area.grpc.interfaces.RegencyService', 'listBy'): face_utilities.unary_stream_inline(servicer.listBy),
      ('bps_area.grpc.interfaces.RegencyService', 'search'): face_utilities.unary_stream_inline(servicer.search),
      ('bps_area.grpc.interfaces.RegencyService', 'update'): face_utilities.unary_unary_inline(servicer.update),
      ('bps_area.grpc.interfaces.RegencyService', 'updateGet'): face_utilities.unary_unary_inline(servicer.updateGet),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RegencyService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bps_area.grpc.interfaces.RegencyService', 'add'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'addGet'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'delete'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'get'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'listBy'): Province.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'search'): SearchQuery.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'update'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.RegencyService', 'updateGet'): Regency.SerializeToString,
    }
    response_deserializers = {
      ('bps_area.grpc.interfaces.RegencyService', 'add'): Response.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'addGet'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'delete'): Response.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'get'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'list'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'listBy'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'search'): Regency.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'update'): Response.FromString,
      ('bps_area.grpc.interfaces.RegencyService', 'updateGet'): Regency.FromString,
    }
    cardinalities = {
      'add': cardinality.Cardinality.UNARY_UNARY,
      'addGet': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'get': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'listBy': cardinality.Cardinality.UNARY_STREAM,
      'search': cardinality.Cardinality.UNARY_STREAM,
      'update': cardinality.Cardinality.UNARY_UNARY,
      'updateGet': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bps_area.grpc.interfaces.RegencyService', cardinalities, options=stub_options)


  class BetaDistrictServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listBy(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def addGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def updateGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaDistrictServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def listBy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    get.future = None
    def add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    add.future = None
    def addGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    addGet.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def updateGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    updateGet.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    delete.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_DistrictService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bps_area.grpc.interfaces.DistrictService', 'add'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'addGet'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'delete'): AreaID.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'get'): AreaID.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'listBy'): Regency.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'search'): SearchQuery.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'update'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'updateGet'): District.FromString,
    }
    response_serializers = {
      ('bps_area.grpc.interfaces.DistrictService', 'add'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'addGet'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'delete'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'get'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'list'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'listBy'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'search'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'update'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'updateGet'): District.SerializeToString,
    }
    method_implementations = {
      ('bps_area.grpc.interfaces.DistrictService', 'add'): face_utilities.unary_unary_inline(servicer.add),
      ('bps_area.grpc.interfaces.DistrictService', 'addGet'): face_utilities.unary_unary_inline(servicer.addGet),
      ('bps_area.grpc.interfaces.DistrictService', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('bps_area.grpc.interfaces.DistrictService', 'get'): face_utilities.unary_unary_inline(servicer.get),
      ('bps_area.grpc.interfaces.DistrictService', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('bps_area.grpc.interfaces.DistrictService', 'listBy'): face_utilities.unary_stream_inline(servicer.listBy),
      ('bps_area.grpc.interfaces.DistrictService', 'search'): face_utilities.unary_stream_inline(servicer.search),
      ('bps_area.grpc.interfaces.DistrictService', 'update'): face_utilities.unary_unary_inline(servicer.update),
      ('bps_area.grpc.interfaces.DistrictService', 'updateGet'): face_utilities.unary_unary_inline(servicer.updateGet),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_DistrictService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bps_area.grpc.interfaces.DistrictService', 'add'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'addGet'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'delete'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'get'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'listBy'): Regency.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'search'): SearchQuery.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'update'): District.SerializeToString,
      ('bps_area.grpc.interfaces.DistrictService', 'updateGet'): District.SerializeToString,
    }
    response_deserializers = {
      ('bps_area.grpc.interfaces.DistrictService', 'add'): Response.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'addGet'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'delete'): Response.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'get'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'list'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'listBy'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'search'): District.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'update'): Response.FromString,
      ('bps_area.grpc.interfaces.DistrictService', 'updateGet'): District.FromString,
    }
    cardinalities = {
      'add': cardinality.Cardinality.UNARY_UNARY,
      'addGet': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'get': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'listBy': cardinality.Cardinality.UNARY_STREAM,
      'search': cardinality.Cardinality.UNARY_STREAM,
      'update': cardinality.Cardinality.UNARY_UNARY,
      'updateGet': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bps_area.grpc.interfaces.DistrictService', cardinalities, options=stub_options)


  class BetaVillageServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listBy(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def addGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def updateGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaVillageServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def listBy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    get.future = None
    def add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    add.future = None
    def addGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    addGet.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def updateGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    updateGet.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    delete.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_VillageService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bps_area.grpc.interfaces.VillageService', 'add'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'addGet'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'delete'): AreaID.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'get'): AreaID.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'listBy'): District.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'search'): SearchQuery.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'update'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'updateGet'): Village.FromString,
    }
    response_serializers = {
      ('bps_area.grpc.interfaces.VillageService', 'add'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'addGet'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'delete'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'get'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'list'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'listBy'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'search'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'update'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'updateGet'): Village.SerializeToString,
    }
    method_implementations = {
      ('bps_area.grpc.interfaces.VillageService', 'add'): face_utilities.unary_unary_inline(servicer.add),
      ('bps_area.grpc.interfaces.VillageService', 'addGet'): face_utilities.unary_unary_inline(servicer.addGet),
      ('bps_area.grpc.interfaces.VillageService', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('bps_area.grpc.interfaces.VillageService', 'get'): face_utilities.unary_unary_inline(servicer.get),
      ('bps_area.grpc.interfaces.VillageService', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('bps_area.grpc.interfaces.VillageService', 'listBy'): face_utilities.unary_stream_inline(servicer.listBy),
      ('bps_area.grpc.interfaces.VillageService', 'search'): face_utilities.unary_stream_inline(servicer.search),
      ('bps_area.grpc.interfaces.VillageService', 'update'): face_utilities.unary_unary_inline(servicer.update),
      ('bps_area.grpc.interfaces.VillageService', 'updateGet'): face_utilities.unary_unary_inline(servicer.updateGet),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_VillageService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bps_area.grpc.interfaces.VillageService', 'add'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'addGet'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'delete'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'get'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'listBy'): District.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'search'): SearchQuery.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'update'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.VillageService', 'updateGet'): Village.SerializeToString,
    }
    response_deserializers = {
      ('bps_area.grpc.interfaces.VillageService', 'add'): Response.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'addGet'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'delete'): Response.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'get'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'list'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'listBy'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'search'): Village.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'update'): Response.FromString,
      ('bps_area.grpc.interfaces.VillageService', 'updateGet'): Village.FromString,
    }
    cardinalities = {
      'add': cardinality.Cardinality.UNARY_UNARY,
      'addGet': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'get': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'listBy': cardinality.Cardinality.UNARY_STREAM,
      'search': cardinality.Cardinality.UNARY_STREAM,
      'update': cardinality.Cardinality.UNARY_UNARY,
      'updateGet': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bps_area.grpc.interfaces.VillageService', cardinalities, options=stub_options)


  class BetaCensusBlockServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listBy(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def get(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def addGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def update(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def updateGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def search(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCensusBlockServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def listBy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    get.future = None
    def add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    add.future = None
    def addGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    addGet.future = None
    def update(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    update.future = None
    def updateGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    updateGet.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    delete.future = None
    def search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_CensusBlockService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bps_area.grpc.interfaces.CensusBlockService', 'add'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'addGet'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'delete'): AreaID.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'get'): AreaID.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'listBy'): Village.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'search'): SearchQuery.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'update'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'updateGet'): CensusBlock.FromString,
    }
    response_serializers = {
      ('bps_area.grpc.interfaces.CensusBlockService', 'add'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'addGet'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'delete'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'get'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'list'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'listBy'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'search'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'update'): Response.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'updateGet'): CensusBlock.SerializeToString,
    }
    method_implementations = {
      ('bps_area.grpc.interfaces.CensusBlockService', 'add'): face_utilities.unary_unary_inline(servicer.add),
      ('bps_area.grpc.interfaces.CensusBlockService', 'addGet'): face_utilities.unary_unary_inline(servicer.addGet),
      ('bps_area.grpc.interfaces.CensusBlockService', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('bps_area.grpc.interfaces.CensusBlockService', 'get'): face_utilities.unary_unary_inline(servicer.get),
      ('bps_area.grpc.interfaces.CensusBlockService', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('bps_area.grpc.interfaces.CensusBlockService', 'listBy'): face_utilities.unary_stream_inline(servicer.listBy),
      ('bps_area.grpc.interfaces.CensusBlockService', 'search'): face_utilities.unary_stream_inline(servicer.search),
      ('bps_area.grpc.interfaces.CensusBlockService', 'update'): face_utilities.unary_unary_inline(servicer.update),
      ('bps_area.grpc.interfaces.CensusBlockService', 'updateGet'): face_utilities.unary_unary_inline(servicer.updateGet),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CensusBlockService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bps_area.grpc.interfaces.CensusBlockService', 'add'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'addGet'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'delete'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'get'): AreaID.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'list'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'listBy'): Village.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'search'): SearchQuery.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'update'): CensusBlock.SerializeToString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'updateGet'): CensusBlock.SerializeToString,
    }
    response_deserializers = {
      ('bps_area.grpc.interfaces.CensusBlockService', 'add'): Response.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'addGet'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'delete'): Response.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'get'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'list'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'listBy'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'search'): CensusBlock.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'update'): Response.FromString,
      ('bps_area.grpc.interfaces.CensusBlockService', 'updateGet'): CensusBlock.FromString,
    }
    cardinalities = {
      'add': cardinality.Cardinality.UNARY_UNARY,
      'addGet': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'get': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'listBy': cardinality.Cardinality.UNARY_STREAM,
      'search': cardinality.Cardinality.UNARY_STREAM,
      'update': cardinality.Cardinality.UNARY_UNARY,
      'updateGet': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bps_area.grpc.interfaces.CensusBlockService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
